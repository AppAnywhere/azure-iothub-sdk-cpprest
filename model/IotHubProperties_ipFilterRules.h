/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * OpenAPI spec version: 2017-01-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IotHubProperties_ipFilterRules.h
 *
 * The IP filter rules for the IoT hub.
 */

#ifndef IotHubProperties_ipFilterRules_H_
#define IotHubProperties_ipFilterRules_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// The IP filter rules for the IoT hub.
/// </summary>
class  IotHubProperties_ipFilterRules
    : public ModelBase
{
public:
    IotHubProperties_ipFilterRules();
    virtual ~IotHubProperties_ipFilterRules();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IotHubProperties_ipFilterRules members

    /// <summary>
    /// The name of the IP filter rule.
    /// </summary>
    utility::string_t getFilterName() const;
    void setFilterName(utility::string_t value);
        /// <summary>
    /// The desired action for requests captured by this rule.
    /// </summary>
    utility::string_t getAction() const;
    void setAction(utility::string_t value);
        /// <summary>
    /// A string that contains the IP address range in CIDR notation for the rule.
    /// </summary>
    utility::string_t getIpMask() const;
    void setIpMask(utility::string_t value);
    
protected:
    utility::string_t m_FilterName;
    utility::string_t m_Action;
    utility::string_t m_IpMask;
    };

}
}
}
}

#endif /* IotHubProperties_ipFilterRules_H_ */
