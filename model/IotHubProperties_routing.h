/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * OpenAPI spec version: 2017-01-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IotHubProperties_routing.h
 *
 * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
 */

#ifndef IotHubProperties_routing_H_
#define IotHubProperties_routing_H_


#include "ModelBase.h"

#include "IotHubProperties_routing_fallbackRoute.h"
#include <vector>
#include "IotHubProperties_routing_endpoints.h"
#include "IotHubProperties_routing_routes.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
/// </summary>
class  IotHubProperties_routing
    : public ModelBase
{
public:
    IotHubProperties_routing();
    virtual ~IotHubProperties_routing();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IotHubProperties_routing members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<IotHubProperties_routing_endpoints> getEndpoints() const;
    void setEndpoints(std::shared_ptr<IotHubProperties_routing_endpoints> value);
    bool endpointsIsSet() const;
    void unsetEndpoints();
    /// <summary>
    /// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
    /// </summary>
    std::vector<std::shared_ptr<IotHubProperties_routing_routes>>& getRoutes();
    bool routesIsSet() const;
    void unsetRoutes();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<IotHubProperties_routing_fallbackRoute> getFallbackRoute() const;
    void setFallbackRoute(std::shared_ptr<IotHubProperties_routing_fallbackRoute> value);
    bool fallbackRouteIsSet() const;
    void unsetFallbackRoute();

protected:
    std::shared_ptr<IotHubProperties_routing_endpoints> m_Endpoints;
    bool m_EndpointsIsSet;
std::vector<std::shared_ptr<IotHubProperties_routing_routes>> m_Routes;
    bool m_RoutesIsSet;
std::shared_ptr<IotHubProperties_routing_fallbackRoute> m_FallbackRoute;
    bool m_FallbackRouteIsSet;
};

}
}
}
}

#endif /* IotHubProperties_routing_H_ */
