/**
 * iotHubClient
 * Use this API to manage the IoT hubs in your Azure subscription.
 *
 * OpenAPI spec version: 2017-01-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IotHubProperties_routing_endpoints_eventHubs.h
 *
 * The properties related to an event hub endpoint.
 */

#ifndef IotHubProperties_routing_endpoints_eventHubs_H_
#define IotHubProperties_routing_endpoints_eventHubs_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// The properties related to an event hub endpoint.
/// </summary>
class  IotHubProperties_routing_endpoints_eventHubs
    : public ModelBase
{
public:
    IotHubProperties_routing_endpoints_eventHubs();
    virtual ~IotHubProperties_routing_endpoints_eventHubs();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IotHubProperties_routing_endpoints_eventHubs members

    /// <summary>
    /// The connection string of the event hub endpoint. 
    /// </summary>
    utility::string_t getConnectionString() const;
    void setConnectionString(utility::string_t value);
        /// <summary>
    /// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
        /// <summary>
    /// The subscription identifier of the event hub endpoint.
    /// </summary>
    utility::string_t getSubscriptionId() const;
    void setSubscriptionId(utility::string_t value);
    bool subscriptionIdIsSet() const;
    void unsetSubscriptionId();
    /// <summary>
    /// The name of the resource group of the event hub endpoint.
    /// </summary>
    utility::string_t getResourceGroup() const;
    void setResourceGroup(utility::string_t value);
    bool resourceGroupIsSet() const;
    void unsetResourceGroup();

protected:
    utility::string_t m_ConnectionString;
    utility::string_t m_Name;
    utility::string_t m_SubscriptionId;
    bool m_SubscriptionIdIsSet;
utility::string_t m_ResourceGroup;
    bool m_ResourceGroupIsSet;
};

}
}
}
}

#endif /* IotHubProperties_routing_endpoints_eventHubs_H_ */
